


		
		
		
			

							
						

			Niklaus Wirth
									
									From Wikipedia, the free encyclopedia
								
												
					Jump to:					navigation, 					search
				
				




This biographical article needs additional citations for verification. Please help by adding reliable sources. Contentious material about living persons that is unsourced or poorly sourced must be removed immediately, especially if potentially libelous or harmful. (February 2013)




Niklaus E. Wirth





Born
(1934-02-15) 15 February 1934 (age&#160;81)
Winterthur, Switzerland


Citizenship
Switzerland


Fields
Computer Science


Institutions



ETH Zurich
Stanford University
University of Zurich
Xerox PARC





Alma mater



ETH Zurich (B.S., 1959)
Université Laval (M.S., 1959)
University of California, Berkeley (Ph.D., 1963)





Known&#160;for
Algol W, Euler, Pascal, Modula, Modula-2, Oberon, Oberon-2, Oberon-07, Oberon System


Notable awards



Turing Award (1984)
SIGPLAN Programming Languages Achievement Award
Fellow of the Computer History Museum (2004)[1]
Marcel Benoist Prize (1989)





Niklaus Emil Wirth (born 15 February 1934) is a Swiss computer scientist, best known for designing several programming languages, including Pascal, and for pioneering several classic topics in software engineering. In 1984 he won the Turing Award, generally recognized as the highest distinction in computer science,[2][3] for developing a sequence of innovative computer languages.[4]



Contents


1 Biography
2 Programming languages
3 Notable publications
4 Wirth's law
5 See also
6 References
7 External links



Biography[edit]
Wirth was born in Winterthur, Switzerland, in 1934. In 1959 he earned a degree in Electronics Engineering from the Swiss Federal Institute of Technology Zürich (ETH Zürich). In 1960 he earned an M.Sc. from Université Laval, Canada. Then in 1963 he was awarded a Ph.D. in Electrical Engineering and Computer Science (EECS) from the University of California, Berkeley, supervised by the computer designer pioneer Harry Huskey.
From 1963 to 1967 he served as assistant professor of Computer Science at Stanford University and again at the University of Zurich. Then in 1968 he became Professor of Informatics at ETH Zürich, taking two one-year sabbaticals at Xerox PARC in California (1976–1977 and 1984–1985). Wirth retired in 1999.
In 2004, he was made a Fellow of the Computer History Museum "for seminal work in programming languages and algorithms, including Euler, Algol-W, Pascal, Modula, and Oberon."[5]
Programming languages[edit]




Niklaus Wirth, 1969, sitting on a spaghetti chair


Wirth was the chief designer of the programming languages Euler, Algol W, Pascal, Modula, Modula-2, Oberon, Oberon-2, and Oberon-07. He was also a major part of the design and implementation team for the Lilith and Oberon operating systems, and for the Lola digital hardware design and simulation system. He received the ACM Turing Award for the development of these languages in 1984 and in 1994 he was inducted as a Fellow of the ACM. He designed the simple programming language PL/0 to illustrate compiler design. It has formed the basis for many university compiler design classes.
Notable publications[edit]
His book The Pascal User Manual And Report, served as the basis of many language implementation efforts in the 1970s and 1980s in the United States and across Europe.
His article Program Development by Stepwise Refinement, about the teaching of programming, is considered to be a classic text in software engineering. In 1975 he wrote the book Algorithms + Data Structures = Programs, which gained wide recognition. Major revisions of this book with the new title Algorithms + Data Structures were published in 1985 and 2004. The examples in the first edition were written in Pascal. These were replaced in the later editions with examples written in Modula-2 and Oberon respectively.
His textbook Systematic Programming: An Introduction was considered a good source for students who wanted to do more than "just coding." Regarded as a challenging text to work through, it was sought as imperative reading for those interested in numerical mathematics.[6]




Signature of Niklaus Wirth


Wirth's law[edit]
Main article: Wirth's law
In 1995, he popularized the adage now known as Wirth's law: "Software is getting slower more rapidly than hardware becomes faster." In his 1995 paper A Plea for Lean Software he attributes it to Martin Reiser.[7]
See also[edit]

Extended Backus–Naur Form
Wirth syntax notation
Bucky bit
Wirth–Weber precedence relationship

References[edit]


^ Niklaus Wirth 2004 Fellow
^ Dasgupta, Sanjoy; Papadimitriou, Christos; Vazirani, Umesh (2008). Algorithms. McGraw-Hill. ISBN&#160;978-0-07-352340-8.&#160;, p. 317.
^ Bibliography of Turing Award lectures, DBLP
^ http://amturing.acm.org/award_winners/wirth_1025774.cfm
^ CHM. "Niklaus Wirth — CHM Fellow Award Winner". Retrieved March 30, 2015.&#160;
^ Abrahams, Paul (July 1974). "Systematic Programming: An Introduction by Niklaus Wirth". Mathematics of Computation (American Mathematical Society) 28 (127): 881–883.&#160;
^ Niklaus Wirth (February 1995). "A Plea for Lean Software". Computer 28 (2): 64–68. doi:10.1109/2.348001. Retrieved 2007-01-13.&#160;


External links[edit]



Wikimedia Commons has media related to Niklaus Wirth.





Wikiquote has quotations related to: Niklaus Wirth



Biography at ETH Zürich.
Personal home page at ETH Zürich.
Niklaus E. Wirth at ACM.
Wirth, Niklaus (April 1971). "Program Development by Stepwise Refinement". Communications of the ACM 14 (4): 221–7. doi:10.1145/362575.362577.&#160;
Wirth, N. (1974). "On the Design of Programming Languages" (PDF). Proc. IFIP Congress 74: 386–393.&#160;
Turing Award Lecture, 1984
Pascal and its Successors paper by Niklaus Wirth – also includes short biography.
A Few Words with Niklaus Wirth
The School of Niklaus Wirth: The Art of Simplicity, by László Böszörményi, Jürg Gutknecht, Gustav Pomberger (editors). dpunkt.verlag / Morgan Kaufmann Publishers, 2000. ISBN 3-932588-85-1 / ISBN 1-55860-723-4.
The book Compiler Construction
The book Algorithms and Data Structures
The book Project Oberon – The Design of an Operating System and Compiler. The book about the Oberon language and Operating System is now available as a PDF file. The PDF file has an additional appendix Ten Years After: From Objects to Components.
Project Oberon 2013









v
t
e


A. M. Turing Award laureates









Alan Perlis (1966)
Maurice Vincent Wilkes (1967)
Richard Hamming (1968)
Marvin Minsky (1969)
James H. Wilkinson (1970)
John McCarthy (1971)
Edsger W. Dijkstra (1972)
Charles Bachman (1973)
Donald Knuth (1974)
Allen Newell / Herbert A. Simon (1975)
Michael O. Rabin / Dana Scott (1976)
John Backus (1977)
Robert W. Floyd (1978)
Kenneth E. Iverson (1979)
Tony Hoare (1980)
Edgar F. Codd (1981)
Stephen Cook (1982)
Ken Thompson / Dennis Ritchie (1983)
Niklaus Wirth (1984)
Richard Karp (1985)
John Hopcroft / Robert Tarjan (1986)
John Cocke (1987)
Ivan Sutherland (1988)
William Kahan (1989)
Fernando J. Corbató (1990)
Robin Milner (1991)
Butler Lampson (1992)
Juris Hartmanis / Richard E. Stearns (1993)
Edward Feigenbaum / Raj Reddy (1994)
Manuel Blum (1995)
Amir Pnueli (1996)
Douglas Engelbart (1997)
Jim Gray (1998)
Fred Brooks (1999)
Andrew Yao (2000)
Ole-Johan Dahl / Kristen Nygaard (2001)
Ron Rivest / Adi Shamir / Leonard Adleman (2002)
Alan Kay (2003)
Vint Cerf / Bob Kahn (2004)
Peter Naur (2005)
Frances E. Allen (2006)
Edmund M. Clarke / E. Allen Emerson / Joseph Sifakis (2007)
Barbara Liskov (2008)
Charles P. Thacker (2009)
Leslie G. Valiant (2010)
Judea Pearl (2011)
Shafi Goldwasser / Silvio Micali (2012)
Leslie Lamport (2013)
Michael Stonebraker (2014)
















v
t
e


Software engineering






Fields



Computer programming
Requirements engineering
Software deployment
Software design
Software maintenance
Software testing
Systems analysis
Formal methods








Concepts



Data modeling
Enterprise architecture
Functional specification
Modeling language
Orthogonality
Programming paradigm
Software
Software archaeology
Software architecture
Software configuration management
Software development methodology
Software development process
Software quality
Software quality assurance
Software verification and validation
Structured analysis








Orientations



Agile
Aspect-oriented
Object orientation
Ontology
Service orientation
SDLC








Models





Developmental




Agile
EUP
Executable UML
Incremental model
Iterative model
Prototype model
RAD
UP









Other




SPICE
CMMI
Data model
ER model
Function model
Information model
Metamodeling
Object model
Systems model
View model









Languages




IDEF
UML
SysML












Software
engineers




Kent Beck
Grady Booch
Fred Brooks
Barry Boehm
Ward Cunningham
Tom DeMarco
Edsger W. Dijkstra
Martin Fowler
C. A. R. Hoare
Watts Humphrey
Michael A. Jackson
Ivar Jacobson
Stephen J. Mellor
Bertrand Meyer
David Parnas
Winston W. Royce
James Rumbaugh
Niklaus Wirth
Edward Yourdon
Victor Basili








Related fields



Computer science
Computer engineering
Project management
Risk management
Systems engineering











 Category
 Commons













Authority control



WorldCat
VIAF: 108127625
LCCN: n50013767
ISNI: 0000 0000 8405 6132
GND: 120777983
SUDOC: 032896301
BNF: cb123836887 (data)
HDS: 31725
MGP: 61847
NDL: 00461229















					
						Retrieved from "https://en.wikipedia.org/w/index.php?title=Niklaus_Wirth&amp;oldid=691410412"					
				Categories: 1934 birthsLiving peopleETH Zurich alumniETH Zurich facultySwiss electronics engineersFellows of the Association for Computing MachineryFormal methods peoplePascal (programming language)Programming language designersProgramming language researchersRecipients of the Pour le Mérite (civil class)Swiss computer scientistsTuring Award laureatesUniversité Laval alumniPeople from WinterthurHidden categories: BLP articles lacking sources from February 2013Commons category with page title same as on WikidataWikipedia articles with VIAF identifiersWikipedia articles with LCCN identifiersWikipedia articles with ISNI identifiersWikipedia articles with GND identifiersWikipedia articles with BNF identifiers				
							
		
		
			